CREATE DATABASE OLA;
USE OLA;

#1 RETRIVE ALL SUCESSFUL BOOKINGS
CREATE VIEW SUCCESSFUL_BOOKINGS AS
SELECT * FROM BOOKINGS
WHERE BOOKING_STATUS='SUCCESS';

SELECT * FROM SUCCESSFUL_BOOKINGS;


#2 FIND THE AVERAGE RIDE DISTANCE FOR EACH VICHELE TYPE
CREATE VIEW RIDE_DISTANCE_OF_EACH_VICHELE AS
SELECT VEHICLE_TYPE,AVG(RIDE_DISTANCE) AS AVG_DISTANCES FROM BOOKINGS
GROUP BY VEHICLE_TYPE;

SELECT * FROM RIDE_DISTANCE_OF_EACH_VICHELE;

#3 GET THE TOTAL NUMBER OF CANCELLED RIDE OF CUSTOMERS
CREATE VIEW CANCELED_BY_CUSTOMER AS
SELECT  * FROM BOOKINGS
WHERE BOOKING_STATUS='CANCELED BY CUSTOMER';

SELECT * FROM CANCELED_BY_CUSTOMER;

#4 LIST THE TOP 5 CUSTOMERS WHO AS BOOKED THE THE HIGHEST NUMBER OF CUSTOMERS
SELECT CUSTOMER_ID, COUNT(*) AS TOTAL_RIDES FROM BOOKINGS
GROUP BY CUSTOMER_ID
ORDER BY TOTAL_RIDES LIMIT 5;

# 5. GET THE NUMBER OF RIDES CANCELLED BY DRIVERS DUE TO PERSONAL AND CAR RELATED ISSUES
 SELECT COUNT(*) FROM bookings WHERE canceled_Rides_by_Driver = 'Personal & Car
 related issue';
 
#6 Find the maximum and minimum driver ratings for Prime Sedan bookings
create VIEW MAX_MIN_DRIVER_RATINGS AS
SELECT MIN(DRIVER_RATINGS) AS MIN_SADAN_BOOKINGS,
MAX(DRIVER_RATINGS) AS MAX_SADAN_BOOKINGS
FROM BOOKINGS
WHERE VEHICLE_TYPE='PRIME SEDAN';
  
SELECT * FROM MAX_MIN_DRIVER_RATINGS;
  
 #7 RETRIVE ALL RIDES WHRE PAYMENT WAS MADE USING UPI 
 CREATE VIEW UPI_PAYMENTS AS
 SELECT * FROM BOOKINGS
 WHERE PAYMENT_METHOD='UPI';
 
 SELECT * FROM UPI_PAYMENTS;
 
#8 Find the average customer rating per vehicle type
CREATE VIEW AVG_Cust_Rating AS
SELECT Vehicle_Type, AVG(Customer_Rating) AS avg_customer_rating
FROM bookings
GROUP BY Vehicle_Type;

SELECT * FROM AVG_Cust_Rating;

#9 Calculate the total booking value of rides completed successfully:
CREATE VIEW total_successful_ride_value AS
SELECT SUM(Booking_Value) AS total_successful_ride_value
FROM bookings
WHERE Booking_Status = 'Success';

#10 List all incomplete rides along with the reason:
CREATE VIEW Incomplete_Rides_Reason AS
SELECT Booking_ID, Incomplete_Rides_Reason
FROM bookings
WHERE Incomplete_Rides = 'Yes';


 
 
  
  



